{
  "version": 3,
  "file": "base64.js",
  "sourceRoot": "",
  "sources": [
    "coffeescripts/base64.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA,MAAM,CAAC,OAAP,GACE;IAAA,SAAA,EAAW,CAAC,IAAD,CAAA,GAAA;aACT,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,CAAA,GAAA;AACV,YAAA;QAAA,IAAG,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAH;UACE,OAAA,GAAU,IAAI,CAAC,QAAL,CAAc,QAAd,EADZ;SAAA,MAAA;UAGE,OAAA,GAAU,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,MAAlB,CAAyB,CAAC,QAA1B,CAAmC,QAAnC,EAHZ;;QAKA,OAAA,GAAU,OACR,CAAC,OADO,CACC,GADD,EACM,GADN,CAER,CAAC,OAFO,CAEC,GAFD,EAEM,GAFN,CAGR,CAAC,OAHO,CAGC,KAHD,EAGQ,EAHR;eAKV,OAAA,CAAQ,OAAR;MAXU,CAAZ;IADS,CAAX;IAcA,SAAA,EAAW,CAAC,WAAD,CAAA,GAAA;aACT,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,CAAA,GAAA;AACV,YAAA;QAAA,IAAG,OAAO,WAAP,KAAsB,QAAzB;UACE,OAAA,GAAU,WACR,CAAC,OADO,CACC,GADD,EACM,GADN,CAER,CAAC,OAFO,CAEC,GAFD,EAEM,GAFN;AAIV,iBAAM,OAAO,CAAC,MAAR,GAAiB,CAAvB;YACE,OAAA,IAAW;UADb;iBAGA,OAAA,CAAQ,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,QAArB,CAA8B,CAAC,QAA/B,CAAwC,OAAxC,CAAR,EARF;SAAA,MAAA;iBAUE,MAAA,CAAO,CAAA,uCAAA,CAAA,CAA0C,OAAO,WAAjD,CAA6D,EAA7D,CAAP,EAVF;;MADU,CAAZ;IADS;EAdX;AADF",
  "sourcesContent": [
    "module.exports =\n  urlEncode: (text) =>\n    new Promise (resolve, reject) =>\n      if Buffer.isBuffer text\n        encoded = text.toString \"base64\"\n      else\n        encoded = Buffer.from(text, \"utf8\").toString(\"base64\")\n\n      encoded = encoded\n        .replace(\"+\", \"-\")\n        .replace(\"/\", \"_\")\n        .replace(/=+$/, \"\")\n\n      resolve encoded\n\n  urlDecode: (encodedText) =>\n    new Promise (resolve, reject) =>\n      if typeof encodedText is \"string\"\n        encoded = encodedText\n          .replace(\"-\", \"+\")\n          .replace(\"_\", \"/\")\n\n        while encoded.length % 4\n          encoded += \"=\";\n\n        resolve Buffer.from(encoded, \"base64\").toString(\"utf-8\")\n      else\n        reject \"Cannot decode non-string value. Found '#{typeof encodedText}'.\"\n"
  ]
}